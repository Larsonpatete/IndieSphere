@page "/search/{term}"
@using IndieSphere.Domain.Spotify
@using IndieSphere.Web.Shared.Components
@using IndieSphere.Web.Infrastructure.SpotifyClient;
@using Microsoft.AspNetCore.Components.Authorization

@inject SpotifyClient client
@if (searchResults == null)
{
    <p>Loading...</p>
} else
{
    <div class="music-container">
        <ul class="song-list">
            @foreach (Song song in searchResults)
            {
                <li class="song-item">
                    <!-- Fixed: Changed ul to li -->
                    <div class="song-name">@song!.name</div>
                    <div class="song-artist">@song.artist</div>
                    <div class="album-art">
                        @if (song.coverArtLink != null)
                        {
                            <img src="@song.coverArtLink" alt="Album cover" class="album-cover" />
                        }
                        else
                        {
                            <span class="no-art">No cover art available</span>
                        }
                    </div>
                    <img src="Full_Logo_Black_CMYK.svg" style="width: 100px; height: auto;" />
                </li>
            }
        </ul>
    </div>
}


@code {
    [Parameter]
    public string term { get; set; } = string.Empty;

    private IEnumerable<Song?> searchResults = Enumerable.Empty<Song?>();

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(term))
        {
            // Decode URL parameter
            var decodedTerm = Uri.UnescapeDataString(term);
            searchResults = await client.Search(decodedTerm);
        }
    }
}
